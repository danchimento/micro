version: '3.4'

services:
  micro.queue:
    container_name: queue
    image: rabbitmq:3-management
    ports:
      - 5001:15672
      - 5672:5672
  
  micro.events:
    container_name: events
    image: microevents
    build:
      context: .
      dockerfile: Micro.Events/Dockerfile
    depends_on:
      - micro.queue
    restart: on-failure

  micro.orchestrator:
    container_name: orchestrator
    image: ${DOCKER_REGISTRY-}microorchestrator
    build:
      context: .
      dockerfile: Micro.Orchestrator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      # - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    #volumes:
     # - C:/cert/:/https
      # - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets
      # - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/

  micro.auth:
    container_name: auth
    image: ${DOCKER_REGISTRY-}microauth
    build:
      context: .
      dockerfile: Micro.Auth/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+
    ports:
    #  - 5555:80
    #  - ASPNETCORE_Kestrel__Certificates__Default__Password=password
    #  - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    #volumes:
    #  - C:/cert/:/https  

  micro.gateway:
    container_name: gateway
    image: micronginx
    build:
      context: .
      dockerfile: Micro.Gateway/Dockerfile
    ports:
      - 5000
    volumes:
      - C:/nginx/html/:/usr/share/nginx/html
      - C:/nginx/conf/:/etc/nginx
      - C:/nginx/ssl/:/etc/nginx/ssl
    depends_on:
      - micro.orchestrator
      - micro.auth